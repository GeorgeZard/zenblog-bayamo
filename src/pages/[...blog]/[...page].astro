---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import Grid from '~/components/blog/Grid.astro';

import Pagination from '~/components/blog/Pagination.astro';
import { Icon } from 'astro-icon/components';
// import PostTags from "~/components/blog/Tags.astro";

import { blogListRobots, getStaticPathsBlogList, fetchPosts } from '~/utils/blog';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

// Get all posts for category generation and filtering
const allPosts = await fetchPosts();

// Read the category from the URL's query string
const currentCategory = Astro.url.searchParams.get('category') || 'All';

// Filter posts on the server based on the current category
const filteredPosts = allPosts.filter(post => {
  if (currentCategory === 'All') {
    return true; // Show all posts
  }
  return post.category?.title === currentCategory;
});

// Get unique categories from real posts, plus 'All'
const categorySet = new Set(['All']);
allPosts.forEach(post => {
  if (post.category?.title) {
    categorySet.add(post.category.title);
  }
});
const categories = Array.from(categorySet);

// const allCategories = await findCategories();
// const allTags = await findTags();

const metadata = {
  title: `${currentCategory === 'All' ? 'Blog' : `Blog - ${currentCategory}`}${currentPage > 1 ? ` â€” Page ${currentPage}` : ''}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: 'blog',
  },
};
---

<Layout metadata={metadata}>
  <section class="py-24 bg-[#f5f3ee] dark:bg-gray-800 transition-colors duration-300">
    <div class="max-w-7xl mx-auto px-6 lg:px-12">
      <!-- Header -->
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-16 mb-16">
        <div class="lg:col-span-6">
          <h5 class="text-sm tracking-widest text-gray-500 dark:text-gray-400 mb-6 transition-colors duration-300">OUR JOURNAL</h5>
          <h1 class="text-4xl md:text-6xl font-light text-gray-900 dark:text-white mb-8 transition-colors duration-300">
            BAYAMO
            <br />
            STORIES
          </h1>
          <div class="w-24 h-1 bg-blue-900 dark:bg-blue-400 mb-8 transition-colors duration-300"></div>
          <p class="text-xl text-gray-700 dark:text-gray-300 mb-6 max-w-lg transition-colors duration-300">
            Explore our collection of stories, insights and updates from Bayamo Beach Bar. Discover the experiences
            that make our venue truly special.
          </p>
        </div>
        <!-- Category Filter -->
        <div class="lg:col-span-6 flex items-end">
          <div class="w-full">
            <div class="flex items-center mb-4">
              <Icon name="tabler:filter" class="w-5 h-5 text-gray-500 dark:text-gray-400 mr-2 transition-colors duration-300" />
              <span class="text-sm text-gray-500 dark:text-gray-400 tracking-widest transition-colors duration-300">FILTER BY</span>
            </div>
            <div class="flex flex-wrap gap-3">
              {categories.map((category) => (
                <a
                  href={category === 'All' ? '/blog' : `/blog?category=${encodeURIComponent(category)}`}
                  class:list={[
                    'px-6 py-2 text-sm tracking-wider transition-colors duration-300 rounded',
                    {
                      'bg-blue-900 dark:bg-blue-600 text-white shadow-md': category === currentCategory,
                      'bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-600': category !== currentCategory,
                    }
                  ]}
                  aria-current={category === currentCategory ? 'page' : 'false'}
                >
                  {category}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Blog Posts Grid -->
      <div id="blog-posts-container">
        <Grid posts={filteredPosts} />
      </div>
      
      <!-- Pagination -->
      <div class="mt-16 flex justify-center">
        <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
      </div>
    </div>
  </section>
</Layout>

