---
import { Icon } from 'astro-icon/components';

// Navigation component - migrated from React
// Maintains original functionality and appearance with full dark mode support
// Includes mobile menu functionality via client-side script

const navItems = [
  {
    name: 'HOME',
    href: '#home',
  },
  {
    name: 'ABOUT',
    href: '#about',
  },
  {
    name: 'SERVICES',
    href: '#services',
  },
  {
    name: 'GALLERY',
    href: '#gallery',
  },
  {
    name: 'BLOG',
    href: '/blog',
  },
  {
    name: 'CONTACT',
    href: '#contact',
  },
];
---

<nav class="fixed top-0 left-0 right-0 bg-white dark:bg-gray-900 z-50 py-6 transition-colors duration-300 shadow-sm dark:shadow-gray-800">
  <div class="max-w-7xl mx-auto px-6 lg:px-12">
    <div class="flex justify-between items-center">
      <div class="flex items-center">
        <a href="/" class="text-3xl font-light tracking-widest text-gray-900 dark:text-white transition-colors duration-300">
          BAYAMO
        </a>
      </div>
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center">
        {navItems.map((item, index) => (
          <>
            <a
              href={item.href}
              class="text-sm tracking-widest text-gray-700 dark:text-gray-300 hover:text-blue-900 dark:hover:text-blue-400 transition-colors duration-300 px-4"
            >
              {item.name}
            </a>
            {index < navItems.length - 1 && <span class="text-gray-300 dark:text-gray-600 mx-1 transition-colors duration-300">|</span>}
          </>
        ))}
      </div>
      <!-- Mobile Navigation Button -->
      <div class="md:hidden flex items-center">
        <button 
          id="mobile-menu-button"
          class="text-gray-700 dark:text-gray-300 hover:text-blue-900 dark:hover:text-blue-400 transition-colors duration-300"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
        >
          <Icon name="tabler:menu-2" class="w-6 h-6 block" id="menu-icon" />
          <Icon name="tabler:x" class="w-6 h-6 hidden" id="close-icon" />
        </button>
      </div>
    </div>
    <!-- Mobile Navigation Menu -->
    <div id="mobile-menu" class="md:hidden mt-4 pb-4 hidden">
      <div class="space-y-2">
        {navItems.map((item) => (
          <a
            href={item.href}
            class="block py-2 text-sm tracking-widest text-gray-700 dark:text-gray-300 hover:text-blue-900 dark:hover:text-blue-400 transition-colors duration-300 mobile-menu-item"
          >
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');
    const mobileMenuItems = document.querySelectorAll('.mobile-menu-item');

    if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
      let isOpen = false;

      const toggleMenu = () => {
        isOpen = !isOpen;
        
        if (isOpen) {
          mobileMenu.classList.remove('hidden');
          menuIcon.classList.add('hidden');
          closeIcon.classList.remove('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'true');
        } else {
          mobileMenu.classList.add('hidden');
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
        }
      };

      // Toggle menu on button click
      mobileMenuButton.addEventListener('click', toggleMenu);

      // Close menu when clicking on menu items
      mobileMenuItems.forEach(item => {
        item.addEventListener('click', () => {
          if (isOpen) {
            toggleMenu();
          }
        });
      });

      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && isOpen) {
          toggleMenu();
        }
      });
    }
  });
</script>