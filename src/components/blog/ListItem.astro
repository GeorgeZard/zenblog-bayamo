---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article
  class="bg-white dark:bg-gray-800 transition-colors duration-300 hover:shadow-lg dark:hover:shadow-gray-900 transform hover:-translate-y-1 duration-300 mb-6 rounded-lg overflow-hidden intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
  data-category={post.category?.title || 'Uncategorized'}
>
  {
    image &&
      (link ? (
        <a class="relative block group" href={link ?? 'javascript:void(0)'}>
          <div class="relative aspect-[4/3] overflow-hidden">
            {image && (
              <Image
                src={image}
                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                widths={[400, 900]}
                width={900}
                sizes="(max-width: 900px) 400px, 900px"
                alt={post.title}
                aspectRatio="4:3"
                loading="lazy"
                decoding="async"
              />
            )}
            {
              post.category && (
                <div class="absolute top-0 left-0 bg-blue-900 dark:bg-blue-600 text-white text-xs tracking-wider py-2 px-4 transition-colors duration-300">
                  {post.category.title}
                </div>
              )
            }
          </div>
        </a>
      ) : (
        <div class="relative aspect-[4/3] overflow-hidden">
          {image && (
            <Image
              src={image}
              class="w-full h-full object-cover"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="4:3"
              loading="lazy"
              decoding="async"
            />
          )}
          {
            post.category && (
              <div class="absolute top-0 left-0 bg-blue-900 dark:bg-blue-600 text-white text-xs tracking-wider py-2 px-4 transition-colors duration-300">
                {post.category.title}
              </div>
            )
          }
        </div>
      ))
  }
  <div class="p-6">
    <header>
      <div class="text-sm text-gray-500 dark:text-gray-400 mb-3 transition-colors duration-300">
        <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 mr-1" />
        <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
        {
          post.author && (
            <>
              {' '}
              Â· <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 mr-1" />
              <span>{post.author.replaceAll('-', ' ')}</span>
            </>
          )
        }
      </div>
      <h2 class="text-2xl font-light text-gray-900 dark:text-white mb-4 transition-colors duration-300 leading-tight">
        {
          link ? (
            <a
              class="hover:text-blue-900 dark:hover:text-blue-400 transition-colors duration-300"
              href={link}
            >
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </header>

    {post.excerpt && <p class="text-gray-700 dark:text-gray-300 mb-6 transition-colors duration-300">{post.excerpt}</p>}
    
    {
      link && (
        <a
          href={link}
          class="inline-flex items-center text-blue-900 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors duration-300 group"
        >
          <span class="text-sm tracking-widest mr-2">READ MORE</span>
          <Icon name="tabler:arrow-right" class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" />
        </a>
      )
    }
    
    {
      post.tags && Array.isArray(post.tags) ? (
        <footer class="mt-5 pt-4 border-t border-gray-200 dark:border-gray-700">
          <PostTags tags={post.tags} />
        </footer>
      ) : (
        <Fragment />
      )
    }
  </div>
</article>
